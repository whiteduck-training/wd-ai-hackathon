[project]
name = "wd-ai-hackathon"
version = "0.1.0"
description = "white duck AI hackathon"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "ipykernel>=6.29.5",
    "jupyter>=1.1.1",
    "notebook>=7.2.2",
    "ruff>=0.7.3",
    "scipy>=1.14.1",
    "pydantic==2.9.2",
    "semantic-kernel>=1.14.0",
    "websearch-python>=1.2.2",
    "arxiv>=2.1.3",
    "faker>=33.0.0",
    "tinydb>=4.8.2",
    "schwarm>=0.1.83",
    "crewai>=0.86.0",
    "langgraph>=0.2.60",
    "langgraph-cli[inmem] >= 0.1.58",
    "autogen-agentchat>=0.2.40",
    "matplotlib>=3.10.0",
    "langchain-openai>=0.2.11",
]



[tool.hatch.build.targets.wheel]
packages = ["src/schwarm"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
include = ["."]
exclude = [
    "**/.venv",
    "**/dump",          # exclude virtual environment - exclude means that it will not be scanned
    "**/settings.json",
]
useLibraryCodeForTypes = true
ignore = [
    "**/settings.json",
] # ignore means that it will be scanned but not checked
defineConstant = { DEBUG = true }
reportMissingImports = "warning"
reportMissingTypeStubs = false
typeCheckingMode = "basic"


[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
## formatting
format.quote-style = "double"
format.indent-style = "space"
format.skip-magic-trailing-comma = false
format.line-ending = "auto"
format.docstring-code-format = true
format.docstring-code-line-length = "dynamic"
## linting
lint.select = [
    'D',   #pydocstyle
    'E',
    'W',   # pycodestyle
    'F',   #pyflakes
    'I',   # sort imports
    'UP',  #pyupgrade
    "RUF", # ruff dev's own rules
    "SIM", # pyflakes simplicity
    "C90", # more complexity rules
]
lint.ignore = ["E203", "E266", "E501", "F541", "D417"]
lint.exclude = ["logs/", "data/", "tests/", "docs/", "dump/"]
lint.pydocstyle.convention = "google"
lint.isort.combine-as-imports = true
exclude = ["logs/", "data/", "tests/", "docs/", "src/templates/", "dump/"]

[tool.pytest.ini_options]
addopts = "--cov src/schwarm --cov-report html -v"
minversion = "6.0"
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test"
verbosity_test_cases = 2
